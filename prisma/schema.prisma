// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // Or "postgresql", "mysql", "sqlserver", "mongodb"
  url      = env("DATABASE_URL")
}

model UserConfig {
  userId               Int         @id // Telegram User ID
  geminiApiKey         String?
  generalSettings      String?   // Store as JSON string
  promptSystemSettings String?   // Store as JSON string
  mcpConfigs           McpConfig[]

  @@map("user_configs")
}

model McpConfig {
  id         Int        @id @default(autoincrement())
  userId     Int
  name       String     // For querying and unique identification per user
  configJson String     @map("config_json") // The rest of the MCP config as JSON string
  user       UserConfig @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@unique([userId, name])
  @@map("mcp_configs")
}

model ChatHistory {
  id            Int      @id @default(autoincrement())
  chatId        Int      @map("chat_id")
  messageIndex  Int      @map("message_index")
  role          String
  contentJson   String   @map("content_json") // Store as JSON string
  timestamp     DateTime @default(now())

  @@unique([chatId, messageIndex])
  @@map("chat_history")
}
